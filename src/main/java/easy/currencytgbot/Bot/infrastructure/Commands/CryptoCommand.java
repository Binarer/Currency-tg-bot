package easy.currencytgbot.Bot.infrastructure.Commands;

import easy.currencytgbot.Bot.Application.Bot.Bot;
import easy.currencytgbot.Bot.Domain.Models.CryptoSymbol;
import easy.currencytgbot.Bot.infrastructure.Components.Command;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Component;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.objects.Update;
import org.telegram.telegrambots.meta.exceptions.TelegramApiException;

import java.util.List;

/**
 * –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫—É—Ä—Å–æ–≤ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç.
 * –≠—Ç–æ—Ç –∫–ª–∞—Å—Å —Ä–µ–∞–ª–∏–∑—É–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å {@link Command} –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –º–µ—Ç–æ–¥ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã –ø–æ–ª—É—á–µ–Ω–∏—è –∫—É—Ä—Å–æ–≤ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç.
 *
 * @author –ú–∏–Ω–∞–∫–æ–≤ –≠–¥—É–∞—Ä–¥
 * @version 1.0
 * @since 2024-11-21
 */
@Slf4j
@Component
public class CryptoCommand implements Command {
    /**
     * –í—ã–ø–æ–ª–Ω—è–µ—Ç –∫–æ–º–∞–Ω–¥—É –ø–æ–ª—É—á–µ–Ω–∏—è –∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫—É—Ä—Å–æ–≤ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç.
     *
     * @param update –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ, —Å–æ–¥–µ—Ä–∂–∞—â–µ–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ–æ–±—â–µ–Ω–∏–∏ –∏–ª–∏ —Å–æ–±—ã—Ç–∏–∏
     * @param bot    —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã
     */
    @Override
    public void execute(Update update, Bot bot) {
        long chatId = update.getMessage().getChatId();
        List<CryptoSymbol> cryptoRates = bot.getCryptoService().getCryptoRates();
        StringBuilder messageText = getMessageText(cryptoRates);
        SendMessage message = SendMessage.builder().chatId(chatId).text(messageText.toString()).build();
        try {
            bot.execute(message);
            log.info("Crypto rates sent");
        } catch (TelegramApiException e) {
            log.error("Error sending crypto rates: {}", e.getMessage(), e);
        }
    }

    private static StringBuilder getMessageText(List<CryptoSymbol> cryptoRates) {
        StringBuilder messageText = new StringBuilder();
        messageText.append("ü§ë –ö—É—Ä—Å –∫—Ä–∏–ø—Ç—ã:\n");

        for (CryptoSymbol symbol : cryptoRates) {
            messageText.append(String.format("""
                    üíµ %s:
                    üîπ Last: $%s
                    üîπ Lowest: $%s
                    üîπ Highest: $%s
                    üîπ Date: %s
                    üîπ Daily Change: %s%%
                    \n""", symbol.getSymbol(), symbol.getLast(), symbol.getLowest(), symbol.getHighest(), symbol.getDate(), symbol.getDailyChangePercentage()));
        }
        return messageText;
    }
}