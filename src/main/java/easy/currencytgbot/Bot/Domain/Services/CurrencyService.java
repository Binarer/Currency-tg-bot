package easy.currencytgbot.Bot.Domain.Services;

import com.fasterxml.jackson.databind.ObjectMapper;
import easy.currencytgbot.Bot.Application.Interfaces.ICurrencyService;
import easy.currencytgbot.Bot.Domain.Models.CurrencyRateResponse;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;
import org.springframework.web.client.RestTemplate;

import java.util.Map;

/**
 * –°–µ—Ä–≤–∏—Å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—É—â–∏—Ö –∫—É—Ä—Å–æ–≤ –≤–∞–ª—é—Ç.
 * –≠—Ç–æ—Ç –∫–ª–∞—Å—Å —Ä–µ–∞–ª–∏–∑—É–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å {@link ICurrencyService} –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –º–µ—Ç–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—É—â–∏—Ö –∫—É—Ä—Å–æ–≤ –≤–∞–ª—é—Ç.
 *
 * @author –≠–¥—É–∞—Ä–¥ –ú–∏–Ω–∞–∫–æ–≤
 * @version 1.0
 * @since 2024-11-21
 */
@Service
public class CurrencyService implements ICurrencyService {

    private final RestTemplate restTemplate;
    private final ObjectMapper objectMapper;

    /**
     * URL API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫—É—Ä—Å–æ–≤ –≤–∞–ª—é—Ç.
     */
    @Value("${currency.api.url}")
    private String api;

    /**
     * –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä —Å–µ—Ä–≤–∏—Å–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫—É—Ä—Å–æ–≤ –≤–∞–ª—é—Ç.
     *
     * @param restTemplate —ç–∫–∑–µ–º–ø–ª—è—Ä {@link RestTemplate} –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è HTTP-–∑–∞–ø—Ä–æ—Å–æ–≤
     * @param objectMapper —ç–∫–∑–µ–º–ø–ª—è—Ä {@link ObjectMapper} –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è JSON –≤ –æ–±—ä–µ–∫—Ç—ã Java
     */
    public CurrencyService(RestTemplate restTemplate, ObjectMapper objectMapper) {
        this.restTemplate = restTemplate;
        this.objectMapper = objectMapper;
    }

    /**
     * –ü–æ–ª—É—á–∞–µ—Ç —Ç–µ–∫—É—â–∏–π –∫—É—Ä—Å –≤–∞–ª—é—Ç—ã.
     *
     * @param currency –≤–∞–ª—é—Ç–∞, –¥–ª—è –∫–æ—Ç–æ—Ä–æ–π –Ω—É–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –∫—É—Ä—Å
     * @return —Å—Ç—Ä–æ–∫–∞ —Å —Ç–µ–∫—É—â–∏–º–∏ –∫—É—Ä—Å–∞–º–∏ –≤–∞–ª—é—Ç—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ:
     * üíπ –¢–µ–∫—É—â–∏–π –∫—É—Ä—Å –¥–ª—è {currency}:
     * üíµ USD: {–∫—É—Ä—Å}
     * üí∂ EUR: {–∫—É—Ä—Å}
     * üí¥ CNY: {–∫—É—Ä—Å}
     * üí∏ RUB: {–∫—É—Ä—Å}
     */
    @Override
    public String getCurrentCurrencyRate(String currency) {
        String apiUrl = api + currency;
        String response = restTemplate.getForObject(apiUrl, String.class);

        try {
            CurrencyRateResponse currencyRateResponse = objectMapper.readValue(response, CurrencyRateResponse.class);
            Map<String, Double> conversionRates = currencyRateResponse.getConversionRates();
            return formatCurrencyRate(currency, conversionRates);
        } catch (Exception e) {
            e.printStackTrace();
            return "Error fetching currency rate";
        }
    }

    /**
     * –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Ç–µ–∫—É—â–∏–π –∫—É—Ä—Å –≤–∞–ª—é—Ç—ã –≤ —Å—Ç—Ä–æ–∫—É.
     *
     * @param currency        –≤–∞–ª—é—Ç–∞, –¥–ª—è –∫–æ—Ç–æ—Ä–æ–π –Ω—É–∂–Ω–æ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å —Å—Ç—Ä–æ–∫—É
     * @param conversionRates –∫–∞—Ä—Ç–∞ –∫—É—Ä—Å–æ–≤ –≤–∞–ª—é—Ç
     * @return —Å—Ç—Ä–æ–∫–∞ —Å —Ç–µ–∫—É—â–∏–º–∏ –∫—É—Ä—Å–∞–º–∏ –≤–∞–ª—é—Ç—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ:
     * üíπ –¢–µ–∫—É—â–∏–π –∫—É—Ä—Å –¥–ª—è {currency}:
     * üíµ USD: {–∫—É—Ä—Å}
     * üí∂ EUR: {–∫—É—Ä—Å}
     * üí¥ CNY: {–∫—É—Ä—Å}
     * üí∏ RUB: {–∫—É—Ä—Å}
     */
    private String formatCurrencyRate(String currency, Map<String, Double> conversionRates) {
        return String.format("""
                        üíπ –¢–µ–∫—É—â–∏–π –∫—É—Ä—Å –¥–ª—è %s:
                        üíµ USD: %.2f
                        üí∂ EUR: %.2f
                        üí¥ CNY: %.2f
                        üí∏ RUB: %.2f
                        """,
                currency,
                conversionRates.getOrDefault("USD", 0.0),
                conversionRates.getOrDefault("EUR", 0.0),
                conversionRates.getOrDefault("CNY", 0.0),
                conversionRates.getOrDefault("RUB", 0.0));
    }
}